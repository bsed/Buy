@model Buy.Models.UserMangeCreateUserViewModel

@{
    var name = Model.UserType.GetDisplayName();
    string title = $"添加{name}";
    if (!string.IsNullOrWhiteSpace(Model.ParentUserID))
    {
        title = $"添加“{Model.ParentUserNickName}”的子级“{name}”";
    }
    ViewBag.Title = title;
    Layout = "~/Views/Shared/_LayoutBackground.cshtml";
}

<ol class="breadcrumb">
    <li>@Html.ActionLink("用户管理", "Index", "UserManage")</li>
    <li class="active">添加用户</li>
</ol>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.Hidden("returnUrl", Request["returnUrl"])
        @Html.HiddenFor(model => Model.UserType)
        @Html.HiddenFor(model => model.ParentUserNickName)
        @Html.HiddenFor(model => model.ParentUserID)
        <div class="form-group">
            @Html.LabelFor(model => model.UserType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 form-control-static">
                @Model.UserType.GetDisplayName()
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NickName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NickName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NickName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (!string.IsNullOrWhiteSpace(Model.ParentUserID))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.ParentUserID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10 form-control-static">
                    @Html.DisplayFor(model => model.ParentUserNickName)
                    @Html.ValidationMessageFor(model => model.ParentUserID, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        @if (Model.UserType == Buy.Enums.UserType.System)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.RoleGroupID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.RoleGroupID, (SelectList)ViewBag.SelRole, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.RoleGroupID, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            @*<div class="form-group">
                <div class="col-md-2">
                    <input type="checkbox" class="pull-right" id="productProxy_ck" />
                </div>
                <div class="col-md-10">
                    参加活动？
                </div>
            </div>
            <div class="hidden productProxy">
                <div class="form-group">
                    <label class="control-label col-md-2">商品</label>
                    <div class="col-md-10">
                        <select id="productProxy_sel" class="form-control">
                            <option class="demo" value=""></option>
                        </select>
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">享受全返个数</label>
                    <div class="col-md-10">
                        <input type="number" id="productProxy_max" value="" class="form-control" />
                    </div>
                </div>
            </div>*@
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" id="creat" value="添加" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts{
    @Scripts.Render("~/bundles/userMange")
}

