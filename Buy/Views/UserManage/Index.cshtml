@model IEnumerable<Buy.Models.UserManage>

@{
    ViewBag.Title = "用户管理";
    Layout = "~/Views/Shared/_LayoutBackground.cshtml";
    var paged = (PagedList.IPagedList<Buy.Models.UserManage>)Model;
    Buy.Enums.UserType selectType = Buy.Enums.UserType.Proxy, tempType;
    if (Enum.TryParse(Request["type"], out tempType))
    {
        selectType = tempType;
    }
    string filter = Request["filter"];
}

<nav class="navbar navbar-default">
    <div class="container-fluid">
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav">
                <li>@Html.ActionLink("添加代理", "Create")</li>
                <li>@Html.ActionLink("添加管理员", "Create", new { userType = Buy.Enums.UserType.System })</li>
                <li class="dropdown">
                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">@selectType.GetDisplayName() <span class="caret"></span></a>
                    <ul class="dropdown-menu">
                        @foreach (Buy.Enums.UserType item in Enum.GetValues(typeof(Buy.Enums.UserType)))
                        {
                            <li><a href="@Url.Action("Index", new { Type = item })">@item.GetDisplayName()</a></li>
                        }
                    </ul>
                </li>

            </ul>
            <form class="navbar-form navbar-left">
                <div class="form-group">
                    <input type="text" name="filter" class="form-control" value="@filter" placeholder="手机号/用户名/微信号/昵称">
                </div>
                <button type="submit" class="btn btn-default">查询</button>
            </form>
        </div>
    </div>
</nav>

<table class="table table-hover table-striped">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.UserType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NickName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RegisterDateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Count)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UseCount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnUseCount)
            </th>
            <th></th>
        </tr>
    </thead>
    @foreach (var item in Model)
    {
        string editUrl;
        switch (item.UserType)
        {
            case Buy.Enums.UserType.Normal:
            case Buy.Enums.UserType.System:
            case Buy.Enums.UserType.ProxySec:
            default:
                editUrl = Url.Action("Edit", new { id = item.Id, ReturnUrl = Url.Action() });
                break;
            case Buy.Enums.UserType.Proxy:
                editUrl = Url.Action("EditProxy", new { id = item.Id, ReturnUrl = Url.Action() });
                break;
        }
        <tr>
            <td>
                @item.UserType.GetDisplayName()
            </td>
            <td>
                @Html.HiddenFor(modelItem => item.Id)
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NickName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RegisterDateTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Count)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UseCount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnUseCount)
            </td>
            <td>
                @Html.ActionLink("添加注册码", "Create", "RegistrationCode", new { userId = item.Id }, null)|
                @Html.ActionLink("查看注册码", "Index", "RegistrationCode", new { userId = item.Id }, null)|
                <a href="@editUrl">编辑</a> |
                @Html.ActionLink("子用户", "Child", new { id = item.Id })
            </td>
        </tr>
    }

</table>


@Html.PageList(paged, Url.PageUrl())